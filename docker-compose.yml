services:
    # Keycloak PostgreSQL DB
  keycloak-db:
      image: postgres:15
      container_name: keycloak-db
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: keycloak
      networks:
        - keycloak-net
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U keycloak" ]
        interval: 5s
        timeout: 5s
        retries: 10
      volumes:
        - keycloak_postgres_data:/var/lib/postgresql/data
      ports:
        - 5433:5432 # avoid clashing with payment DB
  payment-db:
    image: postgres:15
    container_name: payment-postgres
    environment:
      POSTGRES_DB: payment
      POSTGRES_USER: payment
      POSTGRES_PASSWORD: payment
    volumes:
      - payment_postgres_data:/var/lib/postgresql/data
    ports:
      - 5434:5432
    # Keycloak itself
  keycloak:
      image: quay.io/keycloak/keycloak:24.0.3
      container_name: keycloak
      depends_on:
        keycloak-db:
          condition: service_healthy
      ports:
        - "8082:8080"
      networks:
        - keycloak-net
      environment:
        KC_DB: postgres
        KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
        KC_DB_USERNAME: keycloak
        KC_DB_PASSWORD: keycloak
        KEYCLOAK_ADMIN: admin
        KEYCLOAK_ADMIN_PASSWORD: admin
      command: start-dev



  redis:
      image: redis:7
      container_name: redis
      ports:
        - "6379:6379"
      restart: unless-stopped

  zookeeper:
      image: confluentinc/cp-zookeeper:7.2.1
      container_name: zookeeper
      ports:
        - "2181:2181"
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      restart: unless-stopped

  kafka:
      image: confluentinc/cp-kafka:7.2.1
      container_name: kafka
      ports:
        - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      depends_on:
        - zookeeper
      restart: unless-stopped

  kafka-ui:
      image: provectuslabs/kafka-ui:latest
      container_name: kafka-ui
      ports:
        - "8081:8080"
      depends_on:
        - kafka
      environment:
        - KAFKA_CLUSTERS_0_NAME=local
        - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  # disable auth for local use
    ports:
      - "9200:9200"
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elk
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.12.2
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/log:/var/log:ro
    depends_on:
      - elasticsearch
    networks:
      - elk
volumes:
  keycloak_postgres_data:
  payment_postgres_data:
networks:
  keycloak-net:
  elk:
    driver: bridge
