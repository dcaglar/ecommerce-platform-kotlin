<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dogancaglar.paymentservice.adapter.persistence.repository.PaymentOrderMapper">
    <resultMap id="PaymentOrderResultMap"
               type="com.dogancaglar.paymentservice.adapter.persistence.entity.PaymentOrderEntity">
        <id property="paymentOrderId" column="payment_order_id"/>
        <result property="publicPaymentOrderId" column="public_payment_order_id"/>
        <result property="paymentId" column="payment_id"/>
        <result property="publicPaymentId" column="public_payment_id"/>
        <result property="sellerId" column="seller_id"/>
        <result property="amountValue" column="amount_value"/>
        <result property="amountCurrency" column="amount_currency"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="retryCount" column="retry_count"/>
        <result property="retryReason" column="retry_reason"/>
        <result property="lastErrorMessage" column="last_error_message"/>
    </resultMap>

    <select id="findByPaymentId" resultMap="PaymentOrderResultMap">
        SELECT * FROM payment_orders WHERE payment_id = #{paymentId}
    </select>

    <select id="countByPaymentId" resultType="long">
        SELECT COUNT(*) FROM payment_orders WHERE payment_id = #{paymentId}
    </select>

    <select id="countByPaymentIdAndStatusIn" resultType="long">
        SELECT COUNT(*) FROM payment_orders WHERE payment_id = #{paymentId} AND status IN
        <foreach item="status" collection="statuses" open="(" separator="," close=")">
            #{status}
        </foreach>
    </select>

    <select id="existsByPaymentIdAndStatus" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN TRUE ELSE FALSE END FROM payment_orders WHERE payment_id = #{paymentId} AND
        status = #{status}
    </select>

    <select id="getMaxPaymentOrderId" resultType="long">
        SELECT MAX(payment_order_id) FROM payment_orders
    </select>

    <insert id="insert" parameterType="com.dogancaglar.paymentservice.adapter.persistence.entity.PaymentOrderEntity">
        INSERT INTO payment_orders (
        payment_order_id, public_payment_order_id, payment_id, public_payment_id, seller_id, amount_value,
        amount_currency, status, created_at, updated_at, retry_count, retry_reason, last_error_message
        ) VALUES (
        #{paymentOrderId}, #{publicPaymentOrderId}, #{paymentId}, #{publicPaymentId}, #{sellerId}, #{amountValue},
        #{amountCurrency}, #{status}, #{createdAt}, #{updatedAt}, #{retryCount}, #{retryReason}, #{lastErrorMessage}
        )
    </insert>

    <insert id="upsert" parameterType="com.dogancaglar.paymentservice.adapter.persistence.entity.PaymentOrderEntity">
        INSERT INTO payment_orders (
        payment_order_id, public_payment_order_id, payment_id, public_payment_id, seller_id, amount_value,
        amount_currency, status, created_at, updated_at, retry_count, retry_reason, last_error_message
        ) VALUES (
        #{paymentOrderId}, #{publicPaymentOrderId}, #{paymentId}, #{publicPaymentId}, #{sellerId}, #{amountValue},
        #{amountCurrency}, #{status}, #{createdAt}, #{updatedAt}, #{retryCount}, #{retryReason}, #{lastErrorMessage}
        )
        ON CONFLICT (payment_order_id) DO UPDATE SET
        public_payment_order_id = EXCLUDED.public_payment_order_id,
        payment_id = EXCLUDED.payment_id,
        public_payment_id = EXCLUDED.public_payment_id,
        seller_id = EXCLUDED.seller_id,
        amount_value = EXCLUDED.amount_value,
        amount_currency = EXCLUDED.amount_currency,
        status = EXCLUDED.status,
        created_at = EXCLUDED.created_at,
        updated_at = EXCLUDED.updated_at,
        retry_count = EXCLUDED.retry_count,
        retry_reason = EXCLUDED.retry_reason,
        last_error_message = EXCLUDED.last_error_message;
    </insert>
</mapper>
