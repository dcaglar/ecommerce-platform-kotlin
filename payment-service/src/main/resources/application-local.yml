app:
  instance-id: ${POD_NAME:${HOSTNAME:${random.value}}}
  cache:
    ttl-seconds: 3600
  payment-service:
    api-key: secretpaymentapikey12345

  # TopicAdminConfig reads these
  kafka:
    specs:
      payment_order_created_topic:            { partitions: 48, replicas: 1, createDlq: true }
      payment_order_psp_call_requested_topic: { partitions: 48, replicas: 1, createDlq: true }
      payment_status_check_scheduler_topic:   { partitions: 1, replicas: 1, createDlq: true }
      payment_order_succeeded_topic:          { partitions: 48, replicas: 1, createDlq: true }
      payment_order_psp_result_updated_topic: {partitions: 48, replicas: 1, createDlq: true}
  # manual datasource configs for web ourboxdispatcher and parttionen maintencance job
  datasource:
    web:
      jdbc-url: ${SPRING_DATASOURCE_URL}
      username: ${SPRING_DATASOURCE_USERNAME}
      password: ${SPRING_DATASOURCE_PASSWORD}
      driver-class-name: org.postgresql.Driver
      pool-name: web-pool
      maximum-pool-size: 12
      minimum-idle: 6
      connection-timeout: 1000
      validation-timeout: 1000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

    outbox:
      jdbc-url: ${SPRING_DATASOURCE_URL}
      username: ${SPRING_DATASOURCE_USERNAME}
      password: ${SPRING_DATASOURCE_PASSWORD}
      driver-class-name: org.postgresql.Driver
      pool-name: outbox-pool
      maximum-pool-size: 6
      minimum-idle: 3
      connection-timeout: 1500
      validation-timeout: 1500
      idle-timeout: 600000
      max-lifetime: 1800000

    maintenance:
      jdbc-url: ${SPRING_DATASOURCE_URL}
      username: ${SPRING_DATASOURCE_USERNAME}
      password: ${SPRING_DATASOURCE_PASSWORD}
      driver-class-name: org.postgresql.Driver
      pool-name: maint-pool
      maximum-pool-size: 1
      minimum-idle: 0
      connection-timeout: 1500
      validation-timeout: 1500
      idle-timeout: 60000
      max-lifetime: 1800000


server:
  port: 8080
  tomcat:
    mbeanregistry:
      enabled: true
    threads:
      max: 16
    accept-count: 64


spring:
  application:
    name: payment-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI}

  kafka:
    # client defaults used by your custom ProducerFactory too
    properties:
      security.protocol: PLAINTEXT
      session.timeout.ms: 45000

#  datasource:
#    url: ${SPRING_DATASOURCE_URL}
#    username: ${SPRING_DATASOURCE_USERNAME}
#    password: ${SPRING_DATASOURCE_PASSWORD}
#    hikari:
#      maximum-pool-size: 5          # keep what we agreed
#      minimum-idle: 5
#      connection-timeout: 1000      # < TimeLimiter; turns “hidden queueing” into a clear 503-worthy error
#      validation-timeout: 1000
#      leak-detection-threshold: 60000


  data:
    redis:
      url: ${SPRING_DATA_REDIS_URL}
      timeout: 2s               # was 750ms → too tight for local under load
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/changelog.master.xml

spring.jackson.time-zone: UTC

mybatis:
  mapper-locations: classpath:mapper/*.xml

management:
  server:
    port: 9000
  health:
    probes:
      enabled: true
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: "prometheus,metrics,health"
  endpoint:
    health:
      enabled: true
      show-details: always
    prometheus.enabled: true
  metrics:
    tags:
      application: payment-service
    enable:
      all: false
      tomcat.threads.current: true      # current thread count
      tomcat.threads.busy: true         # threads handling requests
      tomcat.threads.config.max: true
      http.server.requests: true
      tomcat.threads: true
      hikaricp.connections: true
      hikaricp.connections.acquire: true
      kafka.producer.topic.record.send: true
      process.cpu.usage: true
      jvm.threads.live: true
      jvm.memory.used: true
      jvm.memory.max: true
      jvm.gc.pause: true
      # YOUR custom meters (exact names with underscores)
      outbox_dispatched_total: true
      outbox_dispatch_failed_total: true
      outbox_event_backlog: true
      outbox_dispatcher_duration: true
    binders:
      tomcat:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
        outbox_dispatcher_duration: true
      percentiles:
        http.server.requests: 0.5,0.95,0.99
        outbox_dispatcher_duration: 0.5,0.95,0.99
    export.prometheus.enabled: true

outbox-dispatcher:
  thread-count: 2
  batch-size: 300
  pool-size: 2

db:
  web:
    statement-timeout-ms: 500
    lock-timeout-ms: 250
    idle-in-tx-timeout-ms: 0
  outbox:
      statement-timeout-ms: 2000
      lock-timeout-ms: 200
      idle-in-tx-timeout-ms: 0