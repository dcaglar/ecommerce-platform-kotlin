kafka:
  dynamic-consumers:
    - id: payment-retry-executor
      topic: payment_order_retry_request_topic
      group-id: payment-retry-executor-group
      class-name: com.dogancaglar.paymentservice.adapter.kafka.consumers.PaymentOrderRetryCommandExecutor
    - id: payment-order-executor
      topic: payment_order_created_queue
      group-id: payment-order-group
      class-name: com.dogancaglar.paymentservice.adapter.kafka.consumers.PaymentOrderExecutor
    - id: payment-status-check-executor-scheduler
      topic: payment_status_check_scheduler_topic
      group-id: payment-status-check-executor-group
      class-name: com.dogancaglar.paymentservice.adapter.kafka.consumers.ScheduledPaymentStatusCheckExecutor
logging:
  level:
    org.springframework.boot.context.config: DEBUG
server:
  port: 8080
  tomcat: ##expose tomcat metrics
    mbeanregistry:
      enabled: true
spring:
  kafka:
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: com.dogancaglar.paymentservice.config.serialization.EventEnvelopeDeserializer
  liquibase:
    change-log: classpath:db/changelog/changelog-master.xml
  jpa:
    hibernate:
      ddl-auto: none  # ‚ùå Disable automatic table creation
      open-in-view: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://myserver/realms/ecommerce-platform
psp:
  simulation:
    currentScenario: NORMAL  # Default scenario
    scenarios:
      NORMAL:
        timeouts:
          enabled: true
          probability: 1    # 1% timeouts in normal
        latency:
          fast:
            probability: 70
            minMs: 50
            maxMs: 150
          moderate:
            probability: 25
            minMs: 150
            maxMs: 300
          slow:
            probability: 5
            minMs: 300
            maxMs: 600
        response:
          successful: 80
          retryable: 15
          statusCheck: 0
          nonRetryable: 5

      PEAK:
        timeouts:
          enabled: true
          probability: 25
        latency:
          fast:
            probability: 30
            minMs: 250
            maxMs: 500
          moderate:
            probability: 50
            minMs: 501
            maxMs: 1500
          slow:
            probability: 20
            minMs: 1501
            maxMs: 2500
        response:
          successful: 50
          retryable: 45
          statusCheck: 0
          nonRetryable: 5

      DEGRADED:
        timeouts:
          enabled: true
          probability: 30      # 10% of calls simply time out (higher than normal, less than peak)
        latency:
          fast:
            probability: 20
            minMs: 2000
            maxMs: 2200
          moderate:
            probability: 20
            minMs: 2201
            maxMs: 2600
          slow:
            probability: 60
            minMs: 2601
            maxMs: 2990
        response:
          successful: 50       # Only 65% succeed (down from 80% in normal)
          retryable: 40        # 25% retryable errors (up from 15%)
          statusCheck: 0       # Still none, as you wish
          nonRetryable: 10
payment-service:
  api-key: secretpaymentapikey12345
spring.jackson.time-zone: Europe/Amsterdam
spring.jpa.properties.hibernate.jdbc.time_zone: UTC
logging.config: classpath:logback-spring.xml
management:
  endpoints:
    web:
      exposure:
        include: prometheus,metrics,health,info
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
    sla:
      http:
        server:
          requests: true
