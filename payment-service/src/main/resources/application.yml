kafka:
  dynamic-consumers:
    - id: payment-retry-executor
      topic: payment_order_retry_request_topic
      group-id: payment-retry-executor-group
      class-name: com.dogancaglar.paymentservice.adapter.kafka.consumers.PaymentOrderRetryCommandExecutor
    - id: payment-order-executor
      topic: payment_order_created_queue
      group-id: payment-order-group
      class-name: com.dogancaglar.paymentservice.adapter.kafka.consumers.PaymentOrderExecutor
    - id: payment-status-check-executor-scheduler
      topic: payment_status_check_scheduler_topic
      group-id: payment-status-check-executor-group
      class-name: com.dogancaglar.paymentservice.adapter.kafka.consumers.ScheduledPaymentStatusCheckExecutor
logging:
  level:
    org.springframework.boot.context.config: DEBUG
server:
  port: 8080
spring:
  kafka:
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: com.dogancaglar.paymentservice.config.serialization.EventEnvelopeDeserializer
  liquibase:
    change-log: classpath:db/changelog/changelog-master.xml
  jpa:
    hibernate:
      ddl-auto: none  # ❌ Disable automatic table creation
      open-in-view: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://myserver/realms/ecommerce-platform
psp:
  simulation:
    timeouts:
      enabled: true
      probability: 5  # 5% chance of timeout
    latency:
      fast: 50        # 50% of requests: 500–1000ms
      moderate: 45    # 45% of requests: 1000–2000ms
      slow: 5         # 5% of requests: 2000–2800ms
    response:
      successful: 60      # 60% of requests → SUCCESSFUL
      retryable: 25       # 25% of requests → FAILED (retryable)
      statusCheck: 10     # 10% of requests → PENDING (status check needed)
      nonRetryable: 5     # 5% of requests → FINALIZE_FAILED (permanent failure)
payment-service:
  api-key: secretpaymentapikey12345
spring.jackson.time-zone: Europe/Amsterdam
spring.jpa.properties.hibernate.jdbc.time_zone: UTC
logging.config: classpath:logback-spring.xml

management:
  endpoints:
    web:
      exposure:
        include: prometheus,metrics,health,info
