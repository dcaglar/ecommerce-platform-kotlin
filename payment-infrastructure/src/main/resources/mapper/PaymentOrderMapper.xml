<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dogancaglar.paymentservice.adapter.outbound.persistance.mybatis.PaymentOrderMapper">
    <resultMap id="PaymentOrderResultMap"
               type="com.dogancaglar.paymentservice.adapter.outbound.persistance.entity.PaymentOrderEntity">
        <id property="paymentOrderId" column="payment_order_id"/>
        <result property="publicPaymentOrderId" column="public_payment_order_id"/>
        <result property="paymentId" column="payment_id"/>
        <result property="publicPaymentId" column="public_payment_id"/>
        <result property="sellerId" column="seller_id"/>
        <result property="amountValue" column="amount_value"/>
        <result property="amountCurrency" column="amount_currency"/>
        <result property="status" column="status"
                typeHandler="com.dogancaglar.paymentservice.adapter.outbound.persistance.mybatis.typehandler.PaymentOrderStatusTypeHandler"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="retryCount" column="retry_count"/>
        <result property="retryReason" column="retry_reason"/>
        <result property="lastErrorMessage" column="last_error_message"/>
    </resultMap>

    <select id="findByPaymentId" resultMap="PaymentOrderResultMap">
        SELECT payment_order_id, public_payment_order_id, payment_id, public_payment_id, seller_id, amount_value,
        amount_currency, status, created_at, updated_at, retry_count, retry_reason, last_error_message FROM
        payment_orders WHERE payment_id = #{paymentId}
    </select>

    <select id="findByPaymentOrderId" resultMap="PaymentOrderResultMap">
        SELECT payment_order_id, public_payment_order_id, payment_id, public_payment_id, seller_id, amount_value,
        amount_currency, status, created_at, updated_at, retry_count, retry_reason, last_error_message
        FROM payment_orders
        WHERE payment_order_id = #{paymentOrderId}
    </select>

    <select id="countByPaymentId" resultType="long">
        SELECT COUNT(*) FROM payment_orders WHERE payment_id = #{paymentId}
    </select>

    <select id="countByPaymentIdAndStatusIn" resultType="long">
        SELECT COUNT(*) FROM payment_orders WHERE payment_id = #{paymentId} AND status IN
        <foreach item="status" collection="statuses" open="(" separator="," close=")">
            #{status}
        </foreach>
    </select>

    <select id="existsByPaymentIdAndStatus" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN TRUE ELSE FALSE END FROM payment_orders WHERE payment_id = #{paymentId} AND
        status = #{status}
    </select>

    <select id="getMaxPaymentOrderId" resultType="long">
        SELECT MAX(payment_order_id) FROM payment_orders
    </select>

    <delete id="deleteAll">
        DELETE FROM payment_orders
    </delete>

    <select id="countAll" resultType="int">
        SELECT COUNT(*) FROM payment_orders
    </select>


    <insert id="insertAllIgnore" parameterType="java.util.List">
        INSERT INTO payment_orders (
        payment_order_id, public_payment_order_id, payment_id, public_payment_id, seller_id,
        amount_value, amount_currency, status, created_at, updated_at, retry_count, retry_reason, last_error_message
        )
        VALUES
        <foreach collection="list" item="po" separator=",">
            (#{po.paymentOrderId}, #{po.publicPaymentOrderId}, #{po.paymentId}, #{po.publicPaymentId}, #{po.sellerId},
            #{po.amountValue}, #{po.amountCurrency}, #{po.status}, #{po.createdAt}, #{po.updatedAt},
            #{po.retryCount}, #{po.retryReason}, #{po.lastErrorMessage})
        </foreach>
        ON CONFLICT (payment_order_id) DO NOTHING
    </insert>


    <insert id="insert"
            parameterType="com.dogancaglar.paymentservice.adapter.outbound.persistance.entity.PaymentOrderEntity">
        INSERT INTO payment_orders (
        payment_order_id, public_payment_order_id, payment_id, public_payment_id, seller_id, amount_value,
        amount_currency, status, created_at, updated_at, retry_count, retry_reason, last_error_message
        ) VALUES (
        #{paymentOrderId}, #{publicPaymentOrderId}, #{paymentId}, #{publicPaymentId}, #{sellerId}, #{amountValue},
        #{amountCurrency}, #{status}, #{createdAt}, #{updatedAt}, #{retryCount}, #{retryReason}, #{lastErrorMessage}
        )
    </insert>

    <select id="updateReturningIdempotent"
            parameterType="com.dogancaglar.paymentservice.adapter.outbound.persistance.entity.PaymentOrderEntity"
            resultMap="PaymentOrderResultMap">
        WITH updated AS (
        UPDATE payment_orders p
        SET
        status = CASE
        WHEN p.status IN ('SUCCESSFUL_FINAL','FAILED_FINAL','DECLINED_FINAL') THEN p.status
        ELSE #{status}
        END,
        updated_at = GREATEST(p.updated_at, #{updatedAt}),
        retry_count = GREATEST(p.retry_count, #{retryCount}),
        retry_reason = COALESCE(#{retryReason}, p.retry_reason),
        last_error_message = COALESCE(#{lastErrorMessage}, p.last_error_message)
        WHERE p.payment_order_id = #{paymentOrderId}
        AND p.status NOT IN ('SUCCESSFUL_FINAL','FAILED_FINAL','DECLINED_FINAL')
        RETURNING
        p.payment_order_id, p.public_payment_order_id, p.payment_id, p.public_payment_id,
        p.seller_id, p.amount_value, p.amount_currency, p.status, p.created_at, p.updated_at,
        p.retry_count, p.retry_reason, p.last_error_message
        )
        SELECT * FROM updated
    </select>

</mapper>
