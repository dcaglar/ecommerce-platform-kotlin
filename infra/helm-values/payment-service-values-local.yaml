spring:
  profile: "local"


runPrivilegeGrantJob: true


autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 2
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 300   # wait ~5m before adding another pod
      policies:
        - type: Pods
          value: 1
          periodSeconds: 300


jvmOpts: >-
  -XX:+UseG1GC
  -XX:+AlwaysActAsServerClassMachine
  -XX:+UseStringDeduplication
  -XX:MaxRAMPercentage=45
  -XX:InitialRAMPercentage=45
  -XX:MaxMetaspaceSize=128m
  -XX:MaxDirectMemorySize=128m
  -XX:ThreadStackSize=512
  -XX:MaxGCPauseMillis=200
  -XX:InitiatingHeapOccupancyPercent=30

replicaCount: 1
resources:
  requests: { cpu: "300m", memory: "512Mi" }
  limits:   { cpu: "1",    memory: "1Gi"   }







ingress:
  enabled: true
  className: nginx
  host: ${INGRESS_HOST}
  path: /
  pathType: Prefix
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: "10"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "10"
  tls: []   # HTTP for minikube

serviceMonitor:
  enabled: true
  path: /actuator/prometheus
  interval: 15s
  scrapeTimeout: 10s
  scheme: http
  labels:
    release: prometheus-stack


service:
  type: ClusterIP
  port: 8080
  portName: http

