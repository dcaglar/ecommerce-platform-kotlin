apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-consumers
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment-consumers
  template:
    metadata:
      labels:
        app: payment-consumers
    spec:
      volumes:
        - name: jfr
          persistentVolumeClaim:
            claimName: jfr-data-payment-consumers
      containers:
        - name: payment-consumers
          volumeMounts:
            - name: jfr
              mountPath: /var/log/jfr
          image: dcaglar1987/payment-consumers:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
            - containerPort: 9010
          env:
            - name: PYROSCOPE_APPLICATION_NAME
              value: payment-consumers
            - name: PYROSCOPE_SERVER_ADDRESS
              value: http://pyroscope.payment.svc:4040
            - name: PYROSCOPE_PROFILER_EVENT
              value: lock    # or lock or alloc or wall
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:StartFlightRecording=name=payment-consumers,filename=/var/log/jfr/pay.jfr,maxage=30m,maxsize=250M,settings=profile,dumponexit=true -XX:FlightRecorderOptions=repository=/var/log/jfr"
            - name: SPRING_PROFILES_ACTIVE
              value: "local"
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: payment-db-credentials
                  key: POSTGRES_CONSUMER_USER
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: payment-db-credentials
                  key: POSTGRES_CONSUMER_PASSWORD
          envFrom:
            - configMapRef:
                name: payment-consumers-config
            - secretRef:
                name: payment-db-credentials
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 90      # (increase for slower startup or when dependent on other services)
            periodSeconds: 30            # (less frequent is OK, liveness is just for "hung" pod detection)
            timeoutSeconds: 5            # (gives JVM time under load)
            failureThreshold: 6          # (allows a few missed heartbeats during spikes)
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "2Gi"



