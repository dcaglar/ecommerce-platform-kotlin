<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.0</version>
        <relativePath/> <!-- lookup parent from Maven Central  if left empttly-->
    </parent>
    <packaging>pom</packaging>
    <!-- IMPORTANT
    iecommerce-platform-kotlin)
    The <packaging>pom</packaging> element means this Maven module is a parent or aggregator project.
    It does not produce a deployable artifact (like a JAR or WAR), but is used to manage configuration, dependencies, and modules for subprojects. It acts as a container for other modules in a multi-module Maven project.
    Parent POM:
    1.	Declares the modules that are part of the project
    2.	Declares properties for dependency
    it declares parant proejct  not as deployable artifact
    but container for  submodules
    tells Maven this module is for project structure, dependency management, and configuration sharing, not to produce code.

ðŸ”¹ What it means:

It declares that this module is:
	â€¢	Not a deployable artifact (like a JAR or WAR)
-->
    <groupId>com.dogancaglar</groupId>
    <artifactId>ecommerce-platform-kotlin</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <modules>
        <module>common</module>
        <module>payment-service</module>
    </modules>

    <properties>
        <java.version>21</java.version>
        <kotlin.version>1.9.22</kotlin.version>
        <postgresql.version>42.7.3</postgresql.version>
        <liquibase.version>4.26.0</liquibase.version>
        <logstash.version>7.4</logstash.version>
        <spring.boot.version>3.5.0</spring.boot.version>
        <sulki.ulid.version>8.3.0</sulki.ulid.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot BOM (already managed by parent, no need to re-import) -->
            <!-- Spring Kafka -->
            <!-- PostgreSQL -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>

            <!-- Liquibase -->
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>${liquibase.version}</version>
            </dependency>

            <!-- Kotlin dependencies (keep versions here for consistent management) -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-jdk8</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-allopen</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-spring</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>de.huxhorn.sulky</groupId>
                <artifactId>de.huxhorn.sulky.ulid</artifactId>
                <version>${sulki.ulid.version}</version>
            </dependency>
            <!-- Logstash encoder -->
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash.version}</version>
            </dependency>
            <!-- Prometheus metrics -->
        </dependencies>

    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <version>${kotlin.version}</version>
                    <executions>
                        <execution>
                            <id>compile</id>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <configuration>
                                <jvmTarget>${java.version}</jvmTarget>
                                <!--
                                ðŸ”§ What this means:
	â€¢	<java.version>21</java.version> is used by Spring Boot to configure things like the Java compiler, maven-compiler-plugin, and potentially some default behaviors.
                        <jvmTarget>17</jvmTarget> tells the Kotlin compiler to generate bytecode compatible with Java 17.
                            -->
                            </configuration>
                        </execution>

                        <execution>
                            <id>test-compile</id>
                            <goals>
                                <goal>test-compile</goal>
                            </goals>
                            <configuration>
                                <jvmTarget>${java.version}</jvmTarget>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>