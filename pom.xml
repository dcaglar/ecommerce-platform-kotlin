<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.0</version>
        <relativePath/> <!-- lookup parent from Maven Central  if left empttly-->
    </parent>
    <packaging>pom</packaging>
    <!-- IMPORTANT
    iecommerce-platform-kotlin)
    The <packaging>pom</packaging> element means this Maven module is a parent or aggregator project.
    It does not produce a deployable artifact (like a JAR or WAR), but is used to manage configuration, dependencies, and modules for subprojects. It acts as a container for other modules in a multi-module Maven project.
    Parent POM:
    1.	Declares the modules that are part of the project
    2.	Declares properties for dependency
    it declares parant proejct  not as deployable artifact
    but container for  submodules
    tells Maven this module is for project structure, dependency management, and configuration sharing, not to produce code.

ðŸ”¹ What it means:

It declares that this module is:
	â€¢	Not a deployable artifact (like a JAR or WAR)
-->
    <groupId>com.dogancaglar</groupId>
    <artifactId>ecommerce-platform-kotlin</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <modules>
        <module>common</module>
        <module>payment-domain</module>
        <module>payment-application</module>
        <module>payment-infrastructure</module>
        <module>payment-service</module>
        <module>payment-consumers</module>
    </modules>

    <properties>
        <java.version>21</java.version>
        <kotlin.version>1.9.25</kotlin.version>
        <postgresql.version>42.7.3</postgresql.version>
        <liquibase.version>4.26.0</liquibase.version>
        <mybatis.version>3.0.3</mybatis.version>
        <logstash.version>7.4</logstash.version>
        <spring-boot.version>3.0.3</spring-boot.version>
        <!-- Build plugins -->
        <kotlin.maven.plugin.version>${kotlin.version}</kotlin.maven.plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.release>${java.version}</maven.compiler.release>
        <!--test dependencies-->
        <maven.surefire.version>3.2.5</maven.surefire.version>
        <assertj.version>3.25.3</assertj.version>
        <mockito.kotlin.version>5.2.1</mockito.kotlin.version>
        <container.test.version>1.19.3</container.test.version>
        <mybatis.spring.starter.version>3.0.3</mybatis.spring.starter.version>
    </properties>

    <dependencyManagement>

        <dependencies>
            <!-- Spring Boot BOM (already managed by parent, no need to re-import) -->
            <!-- Spring Kafka -->
            <!-- PostgreSQL -->

            <dependency>
                <groupId>io.github.resilience4j</groupId>
                <artifactId>resilience4j-bom</artifactId>
                <version>2.3.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.dogancaglar</groupId>
                <artifactId>common</artifactId>
                <version>1.0.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>com.dogancaglar</groupId>
                <artifactId>payment-domain</artifactId>
                <version>1.0.0-SNAPSHOT</version>
            </dependency>

            <dependency>
                <groupId>com.dogancaglar</groupId>
                <artifactId>payment-application</artifactId>
                <version>1.0.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>com.dogancaglar</groupId>
                <artifactId>payment-infrastructure</artifactId>
                <version>1.0.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.spring.starter.version}</version>
            </dependency>

            <!-- Liquibase -->
            <dependency>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-core</artifactId>
                <version>${liquibase.version}</version>
            </dependency>

            <!-- Kotlin dependencies (keep versions here for consistent management) -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-jdk8</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-allopen</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-spring</artifactId>
                <version>${kotlin.version}</version>
            </dependency>

            <!-- Logstash encoder -->
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash.version}</version>
            </dependency>


            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-binder-kafka</artifactId>
                <version>1.11.0</version>  <!-- or whatever the current Micrometer version is -->
            </dependency>


            <!-- Spring Boot dependencies-->

            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-test</artifactId>
                <version>${kotlin.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-test-junit5</artifactId>
                <version>${kotlin.version}</version>
            </dependency>


            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-bom</artifactId>
                <version>${mockito.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito.kotlin</groupId>
                <artifactId>mockito-kotlin</artifactId>
                <version>${mockito.kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${container.test.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter-test</artifactId>
                <version>${mybatis.spring.starter.version}</version>
            </dependency>

        </dependencies>

    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>

                <plugin>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <version>${kotlin.version}</version>
                    <configuration>
                        <args>
                            <arg>-Xjsr305=strict</arg>
                        </args>
                        <compilerPlugins>
                            <plugin>spring</plugin>
                            <plugin>jpa</plugin>
                        </compilerPlugins>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-noarg</artifactId>
                            <version>${kotlin.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-allopen</artifactId>
                            <version>${kotlin.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>