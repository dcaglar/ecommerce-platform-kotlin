@startuml
title Payment Service Architecture

actor User
User -> PaymentController : POST /payments

component PaymentController
component PaymentOrderService
component "Outbox Dispatcher\n(Scheduled)" as OutboxDispatcher
component "Kafka Producer" as KafkaProducer
database "PostgreSQL\n(Payment + OutboxEvent)" as Postgres
cloud Kafka
component "PaymentOrderExecutor\n(Kafka Consumer)" as Executor
component "PSP Client"
cloud "Redis Retry ZSet" as RedisRetry
cloud "Redis Scheduled ZSet" as RedisSchedule
component "DueStatusCheckDispatcher\n(Scheduled Job)" as Scheduler
component "ScheduledStatusCheckExecutor\n(Kafka Consumer)" as StatusExecutor

PaymentController --> PaymentOrderService
PaymentOrderService --> Postgres
Postgres --> OutboxDispatcher
OutboxDispatcher --> KafkaProducer
KafkaProducer --> Kafka : payment_order_created_queue
Kafka --> Executor

Executor --> PSP Client
Executor --> RedisRetry : schedule retry
Executor --> RedisSchedule : schedule status check
Executor --> Kafka : payment_order_success

RedisRetry --> Executor : retry events (poll)
RedisSchedule --> Scheduler : due scheduled checks
Scheduler --> Postgres : persist DueStatusCheck
Scheduler --> Kafka : due_payment_status_check_topic
Kafka --> StatusExecutor : DuePaymentOrderStatusCheck
StatusExecutor --> PSP Client

@enduml