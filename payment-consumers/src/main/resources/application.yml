server:
  port: 8080
app:
  kafka: # Kafka configuration for dynamic consumers
    dynamic-consumers:
      - id: payment-order-executor
        topic: payment_order_created_topic
        group-id: payment-order-created-consumer-group
        class-name: com.dogancaglar.paymentservice.adapter.inbound.kafka.PaymentOrderExecutor
        concurrency: 1

      - id: payment-retry-executor
        topic: payment_order_retry_request_topic
        group-id: payment-order-retry-consumer-group
        class-name: com.dogancaglar.paymentservice.adapter.inbound.kafka.PaymentOrderRetryCommandExecutor
        concurrency: 1

      - id: payment-status-check-executor-scheduler
        topic: payment_status_check_scheduler_topic
        group-id: payment-status-check-scheduler-consumer-group
        class-name: com.dogancaglar.paymentservice.adapter.inbound.kafka.ScheduledPaymentStatusCheckExecutor
        concurrency: 1
spring:
  kafka:
    properties:
      session.timeout.ms: 45000
      # any other common Kafka configs needed for ALL clients
    consumer:
      group-id: payment-consumer-group      # (set appropriately for your domain)
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: com.dogancaglar.paymentservice.deserialization.EventEnvelopeKafkaDeserializer
      properties:
        partition.assignment.strategy: org.apache.kafka.clients.consumer.CooperativeStickyAssignor

  data:
    redis:
      lettuce:
        pool:
          max-active: 64
          max-idle: 64
          min-idle: 8
          max-wait: 2000ms
    # Only the url should be



mybatis:
  mapper-locations: classpath*:mapper/*.xml
management:
  endpoints:
    web:
      exposure:
        include: "prometheus,metrics,health"
  endpoint:
    health:
      enabled: true
      show-details: always
    prometheus:
      enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5,0.95,0.99
    export:
      prometheus:
        enabled: true
    enable:
      all: false
      http.server.requests: true
      tomcat.threads: true
      hikaricp.connections: true
      hikaricp.connections.acquire: true
      outbox.event.backlog: true
      outbox.dispatched: true
      outbox.dispatcher.duration: true
      kafka.consumer.fetch.manager.records.lag: true
      kafka.producer.topic.record.send: true
      process.cpu.usage: true
      jvm.threads.live: true
      jvm.memory.used: true
      jvm.memory.max: true
      jvm.gc.pause: true
      scheduler.outbox.active.threads: true
      scheduler.outbox.pool.size.threads: true
      scheduler.outbox.queue.size: true
      kafka.consumer.fetch.manager.records.consumed: true
      kafka.consumer.fetch.manager.fetch.latency: true
      kafka.consumer.io.time: true
spring.jackson.time-zone: UTC
